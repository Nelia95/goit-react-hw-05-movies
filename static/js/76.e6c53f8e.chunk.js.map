{"version":3,"file":"static/js/76.e6c53f8e.chunk.js","mappings":"6SACAA,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAM,mCAEL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,wGACkBF,EAAAA,EAAAA,IAAA,sCAAyCC,IAD3D,uBACGE,EADH,EACGA,KAGFC,EAAWD,EAAKE,QAJjB,kBAKED,GALF,kEAQA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAAoCC,GAApC,yFACkBP,EAAAA,EAAAA,IAAA,gCACIC,EADJ,wCACuCM,IAFzD,uBACGJ,EADH,EACGA,KADH,kBAMEA,EAAKE,SANP,kEASA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,yFACkBT,EAAAA,EAAAA,IAAA,iBACXS,EADW,oBACGR,EADH,oBADlB,uBACGE,EADH,EACGA,KADH,kBAMEA,GANF,kEASA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAAyBD,GAAzB,yFACkBT,EAAAA,EAAAA,IAAA,iBACXS,EADW,4BACWR,EADX,oBADlB,uBACGE,EADH,EACGA,KADH,kBAKEA,EAAKQ,MALP,kEAUA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BH,GAA5B,yFACkBT,EAAAA,EAAAA,IAAA,iBACXS,EADW,4BACWR,EADX,2BADlB,uBACGE,EADH,EACGA,KADH,kBAKEA,EAAKE,SALP,kE,qICxCP,EAA0B,sBAA1B,EAA2D,uBAA3D,EAA6F,uBAA7F,EAA8H,sBAA9H,EAA+J,uB,SCkD/J,EA9Ca,WACX,OAA8BQ,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAeR,OAbAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,8GAEWT,EAAAA,EAAAA,GAAUU,OAAOJ,IAF5B,OAENZ,EAFM,OAGZiB,QAAQC,IAAIlB,GACZW,EAAWX,GAJC,gDAMZiB,QAAQC,IAAI,KAAMC,SANN,yDAAH,qDASbJ,GACD,GAAE,CAACH,KAGF,iBAAKQ,UAAWC,EAAhB,UACsB,IAAnBX,EAAQY,SACP,eAAIF,UAAWC,EAAf,SACGX,GACCA,EAAQa,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,aAAcC,EAAoB,EAApBA,UAAWrB,EAAS,EAATA,GAE5C,OACE,gBAAae,UAAWC,EAAxB,WACE,gBACED,UAAWC,EACXM,IAAG,0CAAqCF,GACxCG,IAAKJ,KAEP,cAAGJ,UAAWC,EAAd,SAA+BG,KAC/B,eAAGJ,UAAWC,EAAd,wBAA0CK,EAA1C,SAPOrB,EAUZ,MAEJ,IACiB,IAAnBK,EAAQY,SACP,cAAGF,UAAWC,EAAd,qEAMP,C","sources":["apiMovies.js","webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst key = 'b54efa5af09c01fe28de18598482d789';\n\nexport async function fetchTrending() {\n  const { data } = await axios.get(`/trending/movie/day?api_key=${key}`);\n  // const { results } = data;\n  // return { results };\n  const response = data.results;\n  return response;\n}\n\nexport async function fetchMoviesWithQuery(searchQuery) {\n  const { data } = await axios.get(\n    `/search/movie?api_key=${key}&language=en-US&page=1&query=${searchQuery}`\n  );\n  // const { results } = data;\n  // return { results };\n  return data.results;\n}\n\nexport async function fetchMovieDetails(id) {\n  const { data } = await axios.get(\n    `/movie/${id}?api_key=${key}&language=en-US`\n  );\n  // const { poster_path, title, overview, vote_average, genres } = data;\n  // return { poster_path, title, overview, vote_average, genres };\n  return data;\n}\n\nexport async function fetchCast(id) {\n  const { data } = await axios.get(\n    `/movie/${id}/credits?api_key=${key}&language=en-US`\n  );\n\n  return data.cast;\n  // const { cast } = data;\n  // return { cast };\n}\n\nexport async function fetchReviews(id) {\n  const { data } = await axios.get(\n    `/movie/${id}/reviews?api_key=${key}&language=en-US&page=1`\n  );\n  // const { results } = data;\n  return data.results;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"castBox\":\"Cast_castBox__KVoEk\",\"castList\":\"Cast_castList__ARoWn\",\"castItem\":\"Cast_castItem__-Jcfe\",\"castImg\":\"Cast_castImg__T4WbF\",\"castText\":\"Cast_castText__P--Rp\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router';\nimport { fetchCast } from '..//../apiMovies';\nimport style from './Cast.module.css';\n\nconst Cast = () => {\n  const [credits, setCredits] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getCast = async () => {\n      try {\n        const response = await fetchCast(Number(movieId));\n        console.log(response);\n        setCredits(response);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    getCast();\n  }, [movieId]);\n\n  return (\n    <div className={style.castBox}>\n      {credits.length !== 0 && (\n        <ul className={style.castList}>\n          {credits &&\n            credits.map(({ name, profile_path, character, id }) => {\n              // console.log(name, profile_path, character, id);\n              return (\n                <li key={id} className={style.castItem}>\n                  <img\n                    className={style.castImg}\n                    src={`https://image.tmdb.org/t/p/w500/${profile_path}`}\n                    alt={name}\n                  />\n                  <p className={style.castText}>{name}</p>\n                  <p className={style.castText}>Character: {character} </p>\n                </li>\n              );\n            })}\n        </ul>\n      )}{' '}\n      {credits.length === 0 && (\n        <p className={style.castText}>\n          We have no information about the actors of this movie\n        </p>\n      )}\n    </div>\n  );\n};\nexport default Cast;\n"],"names":["axios","key","fetchTrending","data","response","results","fetchMoviesWithQuery","searchQuery","fetchMovieDetails","id","fetchCast","cast","fetchReviews","useState","credits","setCredits","movieId","useParams","useEffect","getCast","Number","console","log","message","className","style","length","map","name","profile_path","character","src","alt"],"sourceRoot":""}