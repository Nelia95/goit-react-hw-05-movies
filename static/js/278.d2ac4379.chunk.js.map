{"version":3,"file":"static/js/278.d2ac4379.chunk.js","mappings":"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","sources":["apiMovies.js","components/MoviesList/MoviesList.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst key = 'b54efa5af09c01fe28de18598482d789';\n\nexport async function fetchTrending() {\n  const { data } = await axios.get(`/trending/movie/day?api_key=${key}`);\n  const { results } = data;\n  return { results };\n}\n\nexport async function fetchMoviesWithQuery(searchQuery) {\n  const { data } = await axios.get(\n    `/search/movie?api_key=${key}&language=en-US&page=1&query=${searchQuery}`\n  );\n  const { results } = data;\n  return { results };\n}\n\nexport async function fetchMovieDetails(id) {\n  const { data } = await axios.get(\n    `/movie/${id}?api_key=${key}&language=en-US`\n  );\n  const { poster_path, title, overview, vote_average, genres } = data;\n  return { poster_path, title, overview, vote_average, genres };\n}\n\nexport async function fetchCast(id) {\n  const { data } = await axios.get(\n    `/movie/${id}/credits?api_key=${key}&language=en-US`\n  );\n  const { cast } = data;\n  return { cast };\n}\n\nexport async function fetchReviews(id) {\n  const { data } = await axios.get(\n    `/movie/${id}/reviews?api_key=${key}&language=en-US&page=1`\n  );\n  const { results } = data;\n  return { results };\n}\n","import { useLocation } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movies &&\n        movies.map(({ id, img, title }) => (\n          <Link to={`/movies/${id}`} key={id} state={{ from: location }}>\n            <img src={img} alt={title} />\n            <h3>{title}</h3>\n          </Link>\n        ))}\n    </ul>\n  );\n};\nexport default MoviesList;\n","import { HiOutlineSearchCircle } from 'react-icons/hi';\nimport { useState, useEffect } from 'react';\nimport MoviesList from '../../components/MoviesList/MoviesList';\nimport { fetchMoviesWithQuery } from '../../apiMovies';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams({});\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    setSearchQuery(\n      e.currentTarget.elements.searchQuery.value.toLowerCase().trim()\n    );\n    setSearchParams({\n      query: e.currentTarget.elements.searchQuery.value.toLowerCase().trim(),\n    });\n  };\n\n  console.log(searchParams);\n  const currentQuery = searchParams.get('query');\n  console.log(currentQuery);\n\n  useEffect(() => {\n    if (!currentQuery) {\n      console.log('nety');\n    }\n  }, [currentQuery]);\n\n  useEffect(() => {\n    if (searchQuery !== '') {\n      const getMovieBySearch = async () => {\n        try {\n          const response = await fetchMoviesWithQuery(searchQuery);\n          console.log(response);\n          setMovies(response);\n        } catch (error) {\n          setError(error.message);\n          console.log(error.message);\n        }\n      };\n      getMovieBySearch();\n    } else if (currentQuery) {\n      const getMovieBySearch = async () => {\n        try {\n          const response = await fetchMoviesWithQuery(currentQuery);\n          console.log(response);\n          setMovies(response);\n        } catch (error) {\n          setError(error.message);\n          console.log(error.message);\n        }\n      };\n      getMovieBySearch();\n    }\n\n    return;\n  }, [searchQuery, currentQuery]);\n\n  return (\n    <>\n      <div onSubmit={handleSubmit}>\n        <input\n          name=\"searchQuery\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search...\"\n        />\n        <button type=\"submit\">\n          <HiOutlineSearchCircle size=\"35\" color=\"#fff\" />\n        </button>\n      </div>\n      {!error ? (\n        <MoviesList movies={movies} />\n      ) : (\n        <p>No results found for '{searchQuery}'</p>\n      )}\n    </>\n  );\n};\nexport default Movies;\n"],"names":["axios","key","fetchTrending","data","results","fetchMoviesWithQuery","searchQuery","fetchMovieDetails","id","poster_path","title","overview","vote_average","genres","fetchCast","cast","fetchReviews","movies","location","useLocation","map","img","to","state","from","src","alt","useState","setSearchQuery","setMovies","error","setError","useSearchParams","searchParams","setSearchParams","console","log","currentQuery","get","useEffect","getMovieBySearch","response","message","onSubmit","e","preventDefault","currentTarget","elements","value","toLowerCase","trim","query","name","type","autoComplete","autoFocus","placeholder","size","color"],"sourceRoot":""}