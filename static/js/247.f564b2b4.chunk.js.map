{"version":3,"file":"static/js/247.f564b2b4.chunk.js","mappings":"8SACAA,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAM,mCAEL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,wGACkBF,EAAAA,EAAAA,IAAA,sCAAyCC,IAD3D,uBACGE,EADH,EACGA,KACAC,EAAYD,EAAZC,QAFH,kBAGE,CAAEA,QAAAA,IAHJ,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAoCC,GAApC,2FACkBN,EAAAA,EAAAA,IAAA,gCACIC,EADJ,wCACuCK,IAFzD,uBACGH,EADH,EACGA,KAGAC,EAAYD,EAAZC,QAJH,kBAKE,CAAEA,QAAAA,IALJ,kEAQA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,mGACkBR,EAAAA,EAAAA,IAAA,iBACXQ,EADW,oBACGP,EADH,oBADlB,uBACGE,EADH,EACGA,KAGAM,EAAuDN,EAAvDM,YAAaC,EAA0CP,EAA1CO,MAAOC,EAAmCR,EAAnCQ,SAAUC,EAAyBT,EAAzBS,aAAcC,EAAWV,EAAXU,OAJ/C,kBAKE,CAAEJ,YAAAA,EAAaC,MAAAA,EAAOC,SAAAA,EAAUC,aAAAA,EAAcC,OAAAA,IALhD,kEAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAyBN,GAAzB,2FACkBR,EAAAA,EAAAA,IAAA,iBACXQ,EADW,4BACWP,EADX,oBADlB,uBACGE,EADH,EACGA,KAGAY,EAASZ,EAATY,KAJH,kBAKE,CAAEA,KAAAA,IALJ,kEAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BR,GAA5B,2FACkBR,EAAAA,EAAAA,IAAA,iBACXQ,EADW,4BACWP,EADX,2BADlB,uBACGE,EADH,EACGA,KAGAC,EAAYD,EAAZC,QAJH,kBAKE,CAAEA,QAAAA,IALJ,kE,yGCUP,UAzCa,WACX,OAA8Ba,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAeR,OAbAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,8GAEWT,EAAAA,EAAAA,GAAUU,OAAOJ,IAF5B,OAENK,EAFM,OAGZC,QAAQC,IAAIF,GACZN,EAAWM,GAJC,gDAMZC,QAAQC,IAAI,KAAMC,SANN,yDAAH,qDASbL,GACD,GAAE,CAACH,KAGF,yBACsB,IAAnBF,EAAQW,QACP,wBACGX,GACCA,EAAQY,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,aAAcC,EAAoB,EAApBA,UAAWzB,EAAS,EAATA,GAC5C,OACE,2BACE,gBACE0B,IAAG,0CAAqCF,GACxCG,IAAKJ,KAEP,uBAAIA,KACJ,uCAAeE,EAAf,SANOzB,EASZ,OAGL,kFAIP,C","sources":["apiMovies.js","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst key = 'b54efa5af09c01fe28de18598482d789';\n\nexport async function fetchTrending() {\n  const { data } = await axios.get(`/trending/movie/day?api_key=${key}`);\n  const { results } = data;\n  return { results };\n}\n\nexport async function fetchMoviesWithQuery(searchQuery) {\n  const { data } = await axios.get(\n    `/search/movie?api_key=${key}&language=en-US&page=1&query=${searchQuery}`\n  );\n  const { results } = data;\n  return { results };\n}\n\nexport async function fetchMovieDetails(id) {\n  const { data } = await axios.get(\n    `/movie/${id}?api_key=${key}&language=en-US`\n  );\n  const { poster_path, title, overview, vote_average, genres } = data;\n  return { poster_path, title, overview, vote_average, genres };\n}\n\nexport async function fetchCast(id) {\n  const { data } = await axios.get(\n    `/movie/${id}/credits?api_key=${key}&language=en-US`\n  );\n  const { cast } = data;\n  return { cast };\n}\n\nexport async function fetchReviews(id) {\n  const { data } = await axios.get(\n    `/movie/${id}/reviews?api_key=${key}&language=en-US&page=1`\n  );\n  const { results } = data;\n  return { results };\n}\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router';\nimport { fetchCast } from '..//../apiMovies';\n\nconst Cast = () => {\n  const [credits, setCredits] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getCast = async () => {\n      try {\n        const response = await fetchCast(Number(movieId));\n        console.log(response);\n        setCredits(response);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    getCast();\n  }, [movieId]);\n\n  return (\n    <div>\n      {credits.length !== 0 ? (\n        <ul>\n          {credits &&\n            credits.map(({ name, profile_path, character, id }) => {\n              return (\n                <li key={id}>\n                  <img\n                    src={`https://image.tmdb.org/t/p/w200/${profile_path}`}\n                    alt={name}\n                  />\n                  <p>{name}</p>\n                  <p>Character: {character} </p>\n                </li>\n              );\n            })}\n        </ul>\n      ) : (\n        <p>We have no information about the actors of this movie</p>\n      )}\n    </div>\n  );\n};\nexport default Cast;\n"],"names":["axios","key","fetchTrending","data","results","fetchMoviesWithQuery","searchQuery","fetchMovieDetails","id","poster_path","title","overview","vote_average","genres","fetchCast","cast","fetchReviews","useState","credits","setCredits","movieId","useParams","useEffect","getCast","Number","response","console","log","message","length","map","name","profile_path","character","src","alt"],"sourceRoot":""}